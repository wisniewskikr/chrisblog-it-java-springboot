apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\IT\repo-private\chrisblog-it-java-springboot\arichitectures\event-driven\stream\kafka\kraft\springboot-kafka-bitnami-docker-compose\kompose-windows-amd64.exe --file .\docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  template:
    metadata:
      annotations:
        kompose.cmd: C:\IT\repo-private\chrisblog-it-java-springboot\arichitectures\event-driven\stream\kafka\kraft\springboot-kafka-bitnami-docker-compose\kompose-windows-amd64.exe --file .\docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: 1@kafka:9093
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: MkU3OEVBNTcwNTJENDM2Qk
          image: bitnami/kafka:3.9.0
          name: kafka
          ports:
            - containerPort: 9092
              protocol: TCP
      restartPolicy: Always
